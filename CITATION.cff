cff-version: 1.2.0
title: APE (Automated Pipeline Explorer)
message: >-
  If you use this software, please cite it using the
  metadata from this file.
type: software
authors:
  - given-names: Vedran
    family-names: Kasalica
    email: v.kasalica@esciencecenter.nl
    affiliation: Netherlands eScience Center, Netherlands
    orcid: 'https://orcid.org/0000-0002-0097-1056'
  - given-names: Anna-Lena
    family-names: Lamprecht
    email: anna-lena.lamprecht@uni-potsdam.de
    affiliation: University of Potsdam, Germany
    orcid: 'https://orcid.org/0000-0003-1953-5606'
  - given-names: Mario
    family-names: Frank
    email: mario.frank@uni-potsdam.de
    affiliation: University of Potsdam, Germany
    orcid: 'https://orcid.org/0000-0001-8888-7475'
  - given-names: Koen
    family-names: Haverkort
    affiliation: Utrecht University, Netherlands
    orcid: 'https://orcid.org/0009-0005-4904-0868'
  - family-names: Maurin
    given-names: Voshol
  - given-names: Charlotte
    family-names: Grunert
    email: charlotte.grunert@uni-potsdam.de
    affiliation: University of Potsdam, Germany
    orcid: 'https://orcid.org/0009-0007-1871-5409'
identifiers:
  - type: doi
    value: 10.5281/zenodo.5638988
repository-code: 'https://github.com/sanctuuary/APE/'
url: 'https://ape-framework.readthedocs.io/en/latest/'
abstract: >-
  APE (Automated Pipeline Explorer) is a command line tool and Java API for the automated exploration of possible computational pipelines (scientific workflows) from large collections of computational tools.

  APE relies on a semantic domain model that includes tool and type taxonomies as controlled vocabularies for the description of computational tools, and functional tool annotations (inputs, outputs, operations performed) using terms from these taxonomies. Based on this domain model and a specification of the available workflow inputs, the intended workflow outputs and possibly additional constraints, APE then computes possible workflows.

  Internally, APE uses a component-based program synthesis approach. It translates the domain knowledge and workflow specification into logical formulas that are then fed to a SAT solver to compute satisfying instances. These solutions are then translated into the actual candidate workflows.
keywords:
  - automated workflow composition
  - workflow synthesis
license: Apache-2.0
